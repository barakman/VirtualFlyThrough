#ifndef GLUI_MENU_H
#define GLUI_MENU_H


#include <GL\glui.h>
#include "..\GenericUtilities\Directory.h"


enum COMMAND
{
	HALT,
	CLEAR,
	UPDATE,
	REFRESH,
	CONTINUE
};


////////////////////////////////////////////////////////////////////////////////
//                                                                            //
// CLASS NAME:  GluiMenu                                                      //
//                                                                            //
// DESCRIPTION: Implement a graphical user interface in order to provide      //
//              information that the Virtual Fly-Through library requires.    //
//                                                                            //
// REMARKS:     Implemented as a Singleton.                                   //
//              Based on the GLUI library (by Paul Rademacher).               //
//                                                                            //
// AUTHOR:      Barakman (barakman@yahoo.com)                                 //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////


class GluiMenu
{
private: //Constructor + Destructor
	GluiMenu();
	~GluiMenu();
	//--------------------------------------------------------------------------
public: //Singleton interface
	static GluiMenu* New();
	static void Delete();
	//--------------------------------------------------------------------------
public: //Initial interface
	void Init(int iWindowId);
	//--------------------------------------------------------------------------
public: //Periodical interface
	void Show();
	void Hide();
	COMMAND SwitchCommand();
	//--------------------------------------------------------------------------
public: //Retrieval interface
	char* GetFile() const;
	double GetAtLight() const;
	double GetPtLight() const;
	double GetMnThrst() const;
	double GetRnAngle() const;
	double GetMnDecrease() const;
	double GetRnDecrease() const;
	//--------------------------------------------------------------------------
private: //Internal operations
	void FillUpContainer();
	void InsertDirectory();
	bool ChangeDirectory();
	//--------------------------------------------------------------------------
private: //Callback functions
	static void ClearAll(int iId);
	static void OpenFile(int iId);
	static void SetAtLight(int iId);
	static void SetPtLight(int iId);
	static void SetMnThrst(int iId);
	static void SetRnAngle(int iId);
	static void SetMnDecrease(int iId);
	static void SetRnDecrease(int iId);
	//--------------------------------------------------------------------------
private: //Menu instance
	static GluiMenu* m_pGluiMenu; //A single instance of the menu
	//--------------------------------------------------------------------------
private: //Menu attributes
	bool      m_bIsOn;      //The visibility state of the menu
	COMMAND   m_eCommand;   //The command generated by the user of the menu
	Directory m_cDirectory; //The current directory set by the user of the menu
	//--------------------------------------------------------------------------
private: //Menu items
	GLUI*         m_pContainer;         //Toggles the menu
	GLUI_Button*  m_pClearButton;       //Clears the entire scene
	GLUI_Button*  m_pAddToButton;       //Adds a file to the scene
	GLUI_Listbox* m_pFilesListbox;      //Controls the current directory
	GLUI_Spinner* m_pAtLightSpinner;    //Changes the ambient light factor
	GLUI_Spinner* m_pPtLightSpinner;    //Changes the point light factor
	GLUI_Spinner* m_pMnThrstSpinner;    //Changes the motion thrust value
	GLUI_Spinner* m_pRnAngleSpinner;    //Changes the rotation angle value
	GLUI_Spinner* m_pMnDecreaseSpinner; //Changes the motion decrease factor
	GLUI_Spinner* m_pRnDecreaseSpinner; //Changes the rotation decrease factor
	//--------------------------------------------------------------------------
};


#endif
